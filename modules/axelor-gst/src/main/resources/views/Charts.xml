<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_5.0.xsd">

  <chart onInit="actino-date-time-set-defalut" name="chart-unpaid-customer" title="Unpaid Invoice Per Customer">
    <search-fields>
      <field type="datetime" name="fromDateTime" title="from Date" />
      <field type="datetime" name="toDateTime" title="To Date" />
    </search-fields>

    <dataset type="sql">
    <![CDATA[
   SELECT                  
        count(self.status) as status,
        party.name as customer
    FROM
        gst_invoice as self
    Left Join gst_party as party on self.party = party.id
    WHERE
        party.is_customer = 'true' AND self.status != 'Paid' and 
        self.datet BETWEEN (cast(:fromDateTime as TIMESTAMP) AT TIME ZONE 'UTC') 
        AND (cast(:toDateTime as TIMESTAMP) AT TIME ZONE 'UTC') group by customer;
    ]]>
    </dataset>

    <!-- SELECT count(self.status) as totalStatus self.party.name as customer FROM Invoice as self WHERE 
      self.party.isCustomer = true AND self.status != 'Paid' GROUP BY customer ORDER BY customer -->

    <category key="customer" type="text" />
    <series key="status" groupBy="customer" type="bar" />
  </chart>

  <chart onInit="actino-date-time-set-defalut" name="chart-paid-invoice-category-product"
    title="Paid Invoice Per Category Per Product">
    <search-fields>
      <field type="datetime" name="fromDateTime" title="from Date" />
      <field type="datetime" name="toDateTime" title="To Date" />
    </search-fields>

    <dataset type="sql">
    <![CDATA[
   SELECT
    count(self.status) as status ,                 
    pro_cat.name as cate
    FROM
        gst_invoice as self
     left join gst_invoice_line as line on self.id = line.invoice
     left join gst_product as product on line.product = product.id
     left join gst_product_category as pro_cat on product.category = pro_cat.id 
    WHERE
        self.status = 'Paid' and 
        self.datet BETWEEN (cast(:fromDateTime as TIMESTAMP) AT TIME ZONE 'UTC') 
        AND (cast(:toDateTime as TIMESTAMP) AT TIME ZONE 'UTC')
    group by cate;
    ]]>
    </dataset>

    <category key="cate" type="text" />
    <series key="status" groupBy="cate" type="bar" />
  </chart>

  <chart name="chart-customer-per-state" title="Customer Per State">
    <dataset type="sql">
    <![CDATA[
  select count(self.id) as customer , 
  state.name as state_name from 
  gst_party as self 
  left join gst_address as add on add.id = any (select gpal.address_list from gst_party_address_list
 as gpal where gpal.gst_party = self.id)  
 left join gst_state as state on add.state = state.id 
 where self.is_customer = 'true' 
 group by state_name;
    ]]>
    </dataset>

    <category key="state_name" type="text" />
    <series key="customer" groupBy="state_name" type="pie" />
  </chart>



  <chart name="chart-invoice-per-status-amount" title="Invoice Per Status For Amount">
    <dataset type="sql">
    <![CDATA[
  select sum(self.gross_amount) as amount , self.status as status from gst_invoice as self group by status;
    ]]>
    </dataset>

    <category key="status" type="text" />
    <series key="amount" groupBy="status" type="bar" />
  </chart>
  
  <chart name="chart-invoice-per-status-number-of-invoice" title="Invoice Per Status For Number Of Invoice">
    <dataset type="sql">
    <![CDATA[
  select count(self.id) as number , self.status as status from gst_invoice as self group by status;
    ]]>
    </dataset>

    <category key="status" type="text" />
    <series key="number" groupBy="status" type="line" />
  </chart>
  
  <chart name="chart-invoice-per-status-number-of-invoice" title="Invoice Per Status For Number Of Invoice">
    <dataset type="sql">
    <![CDATA[
  select count(self.id) as number , self.status as status from gst_invoice as self group by status;
    ]]>
    </dataset>

    <category key="status" type="text" />
    <series key="number" groupBy="status" type="line" />
  </chart>

  <action-attrs name="actino-date-time-set-defalut">
    <attribute name="value" for="toDateTime" expr="eval: __datetime__" />
    <attribute name="value" for="fromDateTime" expr="eval:__date__.withDayOfMonth(1)" />
  </action-attrs>

</object-views>
